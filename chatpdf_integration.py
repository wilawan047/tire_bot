import requests
from make_integration import forward_to_make  # ‡πÉ‡∏ä‡πâ fallback

CHATPDF_WEBHOOK_URL = "https://hook.eu2.make.com/p5vur0klgafscgd1mq7i8ghiwjm57wn5"

def forward_to_chatpdf(data):
    user_message = str(data.get("text", "")).strip()
    if not user_message:
        return "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πà‡∏á‡πÑ‡∏õ ChatPDF"

    source_id = "src_cjw53q0gcxYlE668P0ZxZ"
    api_key = "sec_awHqhVhMOa8NMeEgPp0Go"

    headers = {"x-api-key": api_key, "Content-Type": "application/json"}
    payload = {"sourceId": source_id, "messages": [{"role": "user", "content": user_message}]}

    try:
        response = requests.post("https://api.chatpdf.com/v1/chats/message", headers=headers, json=payload, timeout=10)
        print(f"üîπ ChatPDF response status: {response.status_code}")
        print(f"üîπ ChatPDF response text: {response.text}")
        
        if response.status_code == 200:
            try:
                resp_json = response.json()
                print("üîπ ChatPDF response JSON:", resp_json)  # debug log
                
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ response ‡∏°‡∏µ data ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                if isinstance(resp_json, dict):
                    content = resp_json.get("content")
                    if content:
                        return content
                    else:
                        return "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ñ‡πà‡∏∞"
                else:
                    return "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡πà‡∏∞"
            except ValueError as json_err:
                print(f"‚ùå JSON decode error: {json_err}")
                return "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞"
        else:
            error_msg = f"‚ùå Error {response.status_code} ‡∏à‡∏≤‡∏Å ChatPDF"
            try:
                error_detail = response.json().get("message", response.text)
                return f"{error_msg}: {error_detail}"
            except:
                return f"{error_msg}: {response.text}"
    except requests.RequestException as e:
        print(f"‚ùå Request exception ‡∏™‡πà‡∏á ChatPDF: {e}")
        return f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ChatPDF ‡πÑ‡∏î‡πâ: {e}"
    except Exception as e:
        print(f"‚ùå General exception ‡∏™‡πà‡∏á ChatPDF: {e}")
        return f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}"
